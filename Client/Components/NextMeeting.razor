@using MVSRA.Client.Modules
@using MVSRA.Shared.EFModels

@inject MeetingRepository MeetingRepo

<MudText Typo="Typo.h6">Next Meeting:</MudText>
@if (nextMeeting.Date == default)
{
    <MudText Typo="Typo.body1">Loading...</MudText>
}
else
{
    <MudText Typo="Typo.body1"><b>Date:</b> @nextMeeting.Date.ToLongDateString()</MudText>
    <MudText Typo="Typo.body1"><b>Time:</b> @nextMeeting.Time.ToShortTimeString()</MudText>
    <MudText Typo="Typo.body1"><b>Location:</b> @nextMeeting.Location <MudLink Typo="Typo.body1" Color="Color.Info" Href="https://maps.app.goo.gl/c2Ejgv95Cc6RSJqq7">(@nextMeeting.Address)</MudLink></MudText>
    @if (nextMeeting.Attendees is not null)
    {
        <MudText Typo="Typo.body1"><b>Who:</b> @nextMeeting.Attendees</MudText>
    }
    @if (nextMeeting.Agenda is not null)
    {
        <MudText Typo="Typo.body1"><b>Agenda:</b> @nextMeeting.Agenda</MudText>
    }
}

@code {
    private Meeting nextMeeting = new();

    protected override async Task OnInitializedAsync()
    {
        nextMeeting = await MeetingRepo.GetNextMeeting();
    }
}
