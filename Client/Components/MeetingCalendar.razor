@using MVSRA.Client.Modules
@using MVSRA.Shared.EFModels

@inject MeetingRepository MeetingRepo

<MudText Typo="Typo.h6">Meeting Calendar:</MudText>
@if (meetings.Count <= 0)
{
    <MudText Typo="Typo.body1">Loading...</MudText>
}
else
{
    @foreach (int year in meetings.Select(x => x.Date.Year).Distinct())
    {
        <MudText Typo="Typo.h6">@year Calendar:</MudText>
        <ul>
            @foreach (Meeting meeting in meetings.Where(x => x.Date.Year == year))
            {
                <li>@(meeting.Date.ToLongDateString()) @(meeting.Time.ToShortTimeString())</li>
            }
        </ul>
    }
}

@code {
    private List<Meeting> meetings = [];

    protected override async Task OnInitializedAsync()
    {
        int currentYear = DateTime.Now.Year;
        DateOnly lastYear = new DateOnly(currentYear - 1, 1, 1);
        DateOnly nextYear = new DateOnly(currentYear + 1, 12, 31);

        meetings = await MeetingRepo.GetMeetingRange(lastYear, nextYear);
    }
}
