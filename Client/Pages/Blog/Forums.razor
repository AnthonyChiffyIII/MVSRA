@page "/forums/{Slug}"

@using BlazingApple.Forums.Components.Forums
@using BlazingApple.Forums.Shared.Models.Communities
@using BlazingApple.Forums.Shared.Models.Forums
@using BlazingApple.Forums.Shared.Models.Posts
@using Microsoft.AspNetCore.Components
@using ForumModel = BlazingApple.Forums.Shared.Models.Forums.Forum

<PageTitle>Blog</PageTitle>

@if (_forum is not null)
{
    <ForumDetails Forum="_forum" Communities="_forum.Communities"></ForumDetails>
}

@code {
	#region Parameters
    [Parameter, EditorRequired]
    public string Slug { get; set; } = null!;

	[Parameter]
	public Guid Id { get; set; }
	#endregion

	#region Fields
    private IForum? _forum;
	#endregion

	#region LifeCycleMethods
	protected override async Task OnInitializedAsync()
	{
		await base.OnInitializedAsync();
		_forum = new ForumModel()
			{
				Id = Id,
				Slug = Slug,
				Title = "BlazingApple",
				Description = "Forum for discussion of BlazingApple topics.",
				IsPublic = true,
				Members = null,
				Communities = new List<IForumCommunity>(),
			};

		_forum.Communities!.Add(GetCommunity(_forum.Slug, "Levels of heat", "Discussing what it means to be 'Blazing'."));
		_forum.Communities!.Add(GetCommunity(_forum.Slug, "Best hot sauces", "How to evaluate and decide the best sauces."));
	}
	#endregion

	#region Methods
	public static IForumCommunity GetCommunity(string forumSlug, string title, string description)
	{
		string slug = Convert.ToBase64String(Guid.NewGuid().ToByteArray());
		slug = slug[..^2]
			.Replace('/', '-')
			.Replace('+', '_');
		slug = $"{forumSlug}/{slug}";

		return new ForumCommunity()
			{
				Id = Guid.NewGuid(),
				Slug = slug,
				Title = title,
				Description = description,
				CreatingUserId = "abc",
				DatabaseCreationTimestamp = DateTime.Now.AddDays(-1 * Random.Shared.Next(0, 10000)),
				Posts = new List<IPost>(),
			};
	}
	#endregion
}