@page "/forums/p/{*Slug}"

@using BlazingApple.Components.HTMLElements
@using BlazingApple.Components.Shared.Models.Reactions;
@using BlazingApple.Components;
@using BlazingApple.Forums.Components.Posts
@using BlazingApple.Forums.Components.Communities
@using BlazingApple.Forums.Shared.Models.Reactions
@using BlazingApple.Forums.Shared.Models.Votes;
@using BlazingApple.Forums.Shared.Models.Base;
@using BlazingApple.Forums.Shared.Models.Communities;
@using BlazingApple.Forums.Shared.Models.Posts;
@using BlazingApple.Forums.Shared.Posts.Comments
@using Microsoft.AspNetCore.Components;
@using Post = BlazingApple.Forums.Shared.Models.Posts.Post

@if (_post is not null)
{
    <PostDetails Post="_post" VoteStyle="_voteStyle" CommentStyle="_commentStyle">
        <p>This is a posts page. This shows the actual post, and comments from community's members.</p>
        <p>
            Options:
            <div>
                <label>Voting style</label>
                <PillRadioGroup AdditionalClasses="small" Name="voteStyle" @bind-Value="_voteStyle" Options="@(Enum.GetValues<VoteStyle>())">
                    <TemplatedContent Context="voteStyle">@voteStyle.GetEnumDisplayName()</TemplatedContent>
                </PillRadioGroup>
            </div>
            <div>
                <label>Comment style</label>
                <PillRadioGroup AdditionalClasses="small" Name="commentStyle" @bind-Value="_commentStyle" Options="@(Enum.GetValues<CommentStyle>())">
                    <TemplatedContent Context="commentStyle">@commentStyle.GetEnumDisplayName()</TemplatedContent>
                </PillRadioGroup>
            </div>
        </p>
    </PostDetails>
}

@code {
    private IPost? _post;
    private VoteStyle _voteStyle = VoteStyle.ReactionsOnly;
    private CommentStyle _commentStyle = CommentStyle.Chronological;

    [Parameter, EditorRequired]
    public string Slug { get; set; } = null!;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        string forumSlug = Convert.ToBase64String(Guid.NewGuid().ToByteArray());
        Guid postId = Guid.NewGuid();

        _post = new Post
            {
                Id = postId,
                Slug = Slug,
                Title = "Hello word",
                Content = "I like eggs",
                UserId = "abc",
                DatabaseCreationTimestamp = DateTime.Now.AddDays(-1 * Random.Shared.Next(90)),
                Community = Forums.GetCommunity(forumSlug, "Levels of heat", "Discussing what it means to be 'Blazing'."),
            };
    }

    public static List<IPostReaction> GetReactions()
    {
        List<IPostReaction> reactions = new();
        int reactionCount = Random.Shared.Next(0, 50);
        int reactionOptions = Enum.GetValues<ReactionType>().Length;
        for (int i = 0; i < reactionCount; i++)
        {
            IPostReaction reaction = new PostReaction()
                {
                    Type = Enum.GetValues<ReactionType>()[Random.Shared.Next(0, reactionOptions - 1)],
                    DatabaseCreationTimestamp = DateTime.Now.AddDays(-12),
                    UserId = "abc",
                    PostId = Guid.NewGuid(),
                };

            reactions.Add(reaction);
        }

        return reactions;
    }
}